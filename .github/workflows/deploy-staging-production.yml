name: Build and push docker image
on:
  release:
    types: [published]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-cluster
  GKE_ZONE: asia-southeast1-c
  DEPLOYMENT_NAME: web-app

jobs:
  push_to_registry:
    name: Deploy to staging and production
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Get release tag
        id: release_tag
        run: |- 
          echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          echo "Published tag is ${{ steps.release_tag.outputs.tag }}"
      
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      
      # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      - name: Authenticate to GKE
        run: |-
          gcloud --quiet auth configure-docker
      
      # Get the GKE credentials for deploying to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      
      - name: Install yq
        uses: chrisdickinson/setup-yq@latest
        with:  
          yq-version: "v4.27.5"
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: tanawatchans/${{ env.DEPLOYMENT_NAME }}:{{ steps.release_tag.outputs.tag }}
      
      # Staging deployment
      - name: Add image tag to staging helm value
        run: yq -i '.deployment.image = "tanawatchans/${{ env.DEPLOYMENT_NAME }}:${{ steps.release_tag.outputs.tag }}"' helm-values/staging.yaml

      - name: Deploy to staging using helm
        run: |-
          helm upgrade --install ${{ env.DEPLOYMENT_NAME }} ./helm-templates -f helm-values/staging.yaml

      # Require manual approval. This step will open an issue
      # and the approver need to comment "approved" for the workflow
      # to move on to the next step
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: TanawatChans

      # Production deployment
      - name: Add image tag to production helm value
        run: yq -i '.deployment.image = "tanawatchans/${{ env.DEPLOYMENT_NAME }}:${{ steps.release_tag.outputs.tag }}"' helm-values/production.yaml

      - name: Deploy to production using helm
        run: |-
          helm upgrade --install ${{ env.DEPLOYMENT_NAME }} ./helm-templates -f helm-values/production.yaml
